RECURSIVE
class Solution {
public:
    int fib(int n) {
        if(n==0){
            return 0;
        }
        if(n==1){
            return 1;
        }
        return fib(n-1)+fib(n-2);
    }
};
//TC:o(2^n)
//sc:0(n)
MEMOIZATION
class Solution {
public:
int fn(int n,vector<int>&dp){
    if(n==0){
        return 0;
    }
    if(n==1){
        return 1;
    }
    if(dp[n]!=-1){
        return dp[n];
    }
    return dp[n]=fn(n-1,dp)+fn(n-2,dp);
}
    int fib(int n) {
        vector<int>dp(n+1,-1);
       return fn(n,dp);
    }
};
tc:0(n)
sc:0(n)+o(n)

TABULATION
int fib(int n) {
        vector<int>dp(n+1,-1);
      dp[0]=0;
      dp[1]=1;
      for(int i=2;i<=n;i++){
          dp[i]=dp[i-1]+dp[i-2];
      }
      return dp[n];
    }
